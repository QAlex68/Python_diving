# Базовые регистраторы
# Имена функций для регистрации событий совпадают с названиями констант для
# определения уровня логирования. Перечислим их в примере кода.
import logging
logging.basicConfig(level=logging.NOTSET)
logging.debug('Очень подробная отладочная информация. Заменяем множество "принтов"')
logging.info('Немного информации о работе кода')
logging.warning('Внимание! Надвигается буря!')
logging.error('Поймали ошибку. Дальше только неизвестность')
logging.critical('На этом всё')

# Разработчик сам выбирает какой уровень использовать для регистрации того или
# иного события в его коде.
# Обычно в коде не используют прямое обращение к регистраторам через имя
# модуля. В официальное документации указано, что работать с регистраторами
# напрямую запрещено. Необходимо использовать функцию уровня модуля
# logging.getLogger(name) для получения регистраторов. В таком случае пример выше
# должен выглядеть так:
import logging
logging.basicConfig(level=logging.NOTSET)
logger = logging.getLogger(__name__)
logger.debug('Очень подробная отладочная информация. Заменяем множество "принтов"')
logger.info('Немного информации о работе кода')
logger.warning('Внимание! Надвигается буря!')
logger.error('Поймали ошибку. Дальше только неизвестность')
logger.critical('На этом всё')
# Напомним, что переменная __name__ хранит имя модуля. Если мы запускаем
# модуль как исполняемый файл, в __name__ хранится __main__. Если файл
# импортирован, __name__ хранит имя файла.